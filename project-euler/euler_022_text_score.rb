# encoding: utf-8
# Каждому слову в формулировке этой задачи ставится в соответствие
# специальное число по следующему правилу - сумма позиций букв входящих в слово
# умноженная на место слова в тексте. Например, в слове "по"
# первая буква находится на семнадцатом месте, а вторая находится на
# шестнадцатом месте, итого в сумме тридцать три, а само слово в тексте
# находится на двенадцатом месте, в результате произведение получается
# равным триста девяносто шести.
#
# Чему равна сумма всех специальных чисел для этой формулировки
# (знаки препинания не учитываются)?

class TextWordsSum

	def initialize
		@string = "Каждому слову в формулировке этой задачи ставится в соответствие специальное число по следующему правилу - сумма позиций букв входящих в слово умноженная на место слова в тексте. Например, в слове \"по\" первая буква находится на семнадцатом месте, а вторая находится на шестнадцатом месте, итого в сумме тридцать три, а само слово в тексте находится на двенадцатом месте, в результате произведение получается равным триста девяносто шести. Чему равна сумма всех специальных чисел для этой формулировки (знаки препинания не учитываются)?"
		@string = @string.encode "utf-8"
		@string.tr! "К", "к"
		@string.tr! "Ч", "ч"
		@string.tr! "Н", "н"
	end

	def solve
		names = @string.scan (/[[а-яё]]+/i)
		ind = 0
		names.inject(0) {|acc, x| ind += 1; acc + ind * name_score(x) }
	end
	
	def name_score name
		acc = 0
		name = name.encode "windows-1251"
		name.each_char do |c|
			n = c.ord - 223
			n += 1 if n > 6
			acc += n
		end
		acc
	end

end

def time
  start = Time.now
  yield
  Time.now - start
end

if __FILE__ == $0

	cl = nil
	t_init = time { cl = TextWordsSum.new }
	ans = 0
	t_solve = time { ans = cl.solve }

	puts "Sum is: #{ans}"
	puts "Init time is: #{t_init} and solve time is #{t_solve}"
end
